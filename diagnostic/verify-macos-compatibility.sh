#!/bin/bash

# Verificador de Compatibilidad macOS
# Script para analizar si el c√≥digo de vscode.sh funcionar√° correctamente en macOS

# Colores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîç VERIFICADOR DE COMPATIBILIDAD macOS${NC}"
echo -e "${YELLOW}Analizando vscode.sh para problemas potenciales en macOS...${NC}"
echo ""

# An√°lisis 1: Comandos espec√≠ficos de macOS
echo -e "${BLUE}üìã 1. Verificando comandos espec√≠ficos de macOS:${NC}"

# Buscar uso de sed vs head
echo "   ‚Ä¢ Verificando comando 'sed' para macOS..."
if grep -q "sed '\$d'" scripts/vscode.sh; then
    echo -e "   ${GREEN}‚úÖ sed '\$d' encontrado (correcto para macOS)${NC}"
else
    echo -e "   ${RED}‚ùå sed '\$d' NO encontrado${NC}"
fi

# Buscar detecci√≥n de OSTYPE
echo "   ‚Ä¢ Verificando detecci√≥n de OSTYPE..."
if grep -q 'OSTYPE.*darwin' scripts/vscode.sh; then
    echo -e "   ${GREEN}‚úÖ Detecci√≥n de darwin encontrada${NC}"
    grep -n 'OSTYPE.*darwin' scripts/vscode.sh | while read line; do
        echo -e "      ${GREEN}‚îÇ${NC} $line"
    done
else
    echo -e "   ${RED}‚ùå Detecci√≥n de darwin NO encontrada${NC}"
fi

echo ""

# An√°lisis 2: Paths de configuraci√≥n
echo -e "${BLUE}üìÇ 2. Verificando paths de configuraci√≥n:${NC}"

# Buscar referencias a directorios de configuraci√≥n
echo "   ‚Ä¢ Buscando \$VSCODE_SETTINGS_DIR..."
if grep -q 'VSCODE_SETTINGS_DIR' scripts/vscode.sh; then
    echo -e "   ${GREEN}‚úÖ VSCODE_SETTINGS_DIR encontrado${NC}"
    echo "   üí° Debe definirse en el script principal para macOS como:"
    echo "      macOS: ~/Library/Application Support/Code/User/"
else
    echo -e "   ${YELLOW}‚ö†Ô∏è  VSCODE_SETTINGS_DIR no encontrado en vscode.sh${NC}"
fi

echo ""

# An√°lisis 3: Comandos problem√°ticos para macOS
echo -e "${BLUE}‚ö†Ô∏è  3. Comandos potencialmente problem√°ticos:${NC}"

# Buscar comandos que pueden fallar en macOS
problemmatic_commands=(
    "head -n -1"
    "wc -l"
    "grep -q"
)

for cmd in "${problemmatic_commands[@]}"; do
    if grep -q "$cmd" scripts/vscode.sh; then
        echo -e "   ${YELLOW}‚ö†Ô∏è  '$cmd' encontrado - verificar compatibilidad${NC}"
        grep -n "$cmd" scripts/vscode.sh | head -3 | while read line; do
            echo -e "      ${YELLOW}‚îÇ${NC} $line"
        done
    fi
done

echo ""

# An√°lisis 4: Simulaci√≥n de l√≥gica macOS
echo -e "${BLUE}üß™ 4. Simulando l√≥gica de detecci√≥n macOS:${NC}"

# Simular OSTYPE de macOS
MOCK_OSTYPE="darwin22.0"
echo "   ‚Ä¢ Simulando OSTYPE='$MOCK_OSTYPE'"

if [[ "$MOCK_OSTYPE" == "darwin"* ]]; then
    echo -e "   ${GREEN}‚úÖ Detecci√≥n macOS funcionar√≠a correctamente${NC}"
    echo "   üîÑ Se ejecutar√≠a: detect_vscode_macos_issues()"
    echo "   üì¶ Se usar√≠a: code_install_extension_smart()"
else
    echo -e "   ${RED}‚ùå Detecci√≥n macOS FALLAR√çA${NC}"
fi

echo ""

# An√°lisis 5: Problemas espec√≠ficos identificados
echo -e "${BLUE}üö® 5. PROBLEMAS ESPEC√çFICOS IDENTIFICADOS:${NC}"

echo -e "${RED}‚ùå PROBLEMA 1: Variable VSCODE_SETTINGS_DIR${NC}"
echo "   ‚Ä¢ No est√° definida en vscode.sh"
echo "   ‚Ä¢ Debe definirse seg√∫n el OS en el script principal"
echo ""

echo -e "${RED}‚ùå PROBLEMA 2: Dependencias del script principal${NC}"
echo "   ‚Ä¢ vscode.sh depende de variables del install.sh"
echo "   ‚Ä¢ Puede fallar si se ejecuta independientemente"
echo ""

echo -e "${YELLOW}‚ö†Ô∏è  PROBLEMA 3: Sin validaci√≥n en macOS real${NC}"
echo "   ‚Ä¢ El c√≥digo se escribi√≥ desde Linux/WSL"
echo "   ‚Ä¢ Necesita pruebas en macOS real para confirmar funcionamiento"
echo ""

# Recomendaciones
echo -e "${BLUE}üìã RECOMENDACIONES PARA PRUEBA EN macOS:${NC}"
echo ""
echo "1. üß™ ANTES de probar en macOS, crear script de diagn√≥stico"
echo "2. üîç Verificar que VSCODE_SETTINGS_DIR est√© definido"
echo "3. üìã Crear log detallado para capturar errores reales"
echo "4. ‚ö†Ô∏è  Probar con una extensi√≥n simple primero"
echo "5. üîÑ Tener plan de rollback si algo falla"
echo ""

echo -e "${GREEN}‚úÖ Verificaci√≥n completada${NC}"
echo -e "${YELLOW}üí° CONCLUSI√ìN: El c√≥digo puede tener problemas en macOS real${NC}"
echo -e "${YELLOW}   Se recomienda probar en macOS con mucho cuidado${NC}"
